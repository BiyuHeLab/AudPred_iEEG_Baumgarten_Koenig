function NASTD_ECoG_Connectivity_PlotGC_allsub_aggrtone_median ...
    (subs, ...
    ToneDur_text, ...
    SelElecs, AnatReg_CatLabels, ...
    save_poststepFigs, ...
    param, paths_NASTD_ECoG)

%Plot group-level aggregated GC results for each anatomical parcel pairing
%for each effect type, resoectively.

set_visibility  = 'on';
Yaxis_scaling   = 'true';

%% 1) Set paths &  load input data
path_inputdata = ([paths_NASTD_ECoG.ECoGdata_Connectivity 'GC/']);
label_inputdata = ['GCdata_n9_' ...
    param.GC.ElecPairRegion '_' ...
    param.GC.InputDataType{1} param.GC.tone_aggregation_label '_' ...
    param.GC.epochdur_ms_label '_ensemnorm'];
% label_inputdata = ['GCdata_n' num2str(length(subs)) '_' ...
%     param.GC.ElecPairRegion '_' ...
%     param.GC.InputDataType{1} param.GC.tone_aggregation_label '_' ...
%     param.GC.epochdur_ms_label '_ensemnorm'];
load([path_inputdata label_inputdata], 'GCdata');


%% 2) Determine and read out anatomical regions
for i_effect = 1:length(param.GC.ElecPairEffect)
    
    %2.0 Determine electrode selection labels
    if strcmp(param.GC.ElecPairEffect{i_effect}, 'Pred_Pred')
        title_label1   = 'Pred2Pred';
    elseif strcmp(param.GC.ElecPairEffect{i_effect}, 'PE_PE')
        title_label1   = 'PE2PE';
    elseif strcmp(param.GC.ElecPairEffect{i_effect}, 'Pred_PE')
        title_label1   = 'Pred2PE';
    elseif strcmp(param.GC.ElecPairEffect{i_effect}, 'PE_Pred')
        title_label1   = 'PE2Pred';
    end

    if strcmp(param.GC.ElecPairRegion, 'AllRegions')
        title_label2   = 'AllReg';
    elseif strcmp(param.GC.ElecPairRegion, 'Frontal_Temporal')
        title_label2   = 'Front2Temp';
    elseif strcmp(param.GC.ElecPairRegion, 'Temporal_Frontal')
        title_label2   = 'Temp2Front';
    end

    subfield_label1 = extractBefore(param.GC.ElecPairEffect{i_effect}, '_');    
    
    %2.1 Read out detailed electrode label 
    %and correspoding anatomical region label
    %for each source & target elecs per subject
    clear fulllabel* anatlabel*
    for i_sub = 1:length(subs)
        if ~isempty(GCdata{i_sub}.temporalGC{i_effect})
            clear temp_*
            %Read out anatomical region labels for source elecs per subject
            for i_sourceelec = 1:length(GCdata{i_sub}.ind_pairedelecs_from{i_effect})
                
                temp_eleclabel_sourceelec = ...
                    GCdata{i_sub}.label_allelecs{GCdata{i_sub}.ind_pairedelecs_from{i_effect}(i_sourceelec)};
                temp_sublabel = subs{i_sub};
                temp_filt_elec = strncmp(fields(...
                    SelElecs.Pairs.(param.GC.ElecPairEffect{i_effect}).(param.GC.ElecPairRegion).Pairs_perelec), ...
                    [temp_eleclabel_sourceelec '_' temp_sublabel], ...
                    length(temp_eleclabel_sourceelec) + length(temp_sublabel) + 1);
                temp_anatlabel_sourceelec = ...
                    fields(SelElecs.Pairs.(param.GC.ElecPairEffect{i_effect}).(param.GC.ElecPairRegion).Pairs_perelec);
                temp_anatlabel_sourceelec = temp_anatlabel_sourceelec{temp_filt_elec};
                
                fulllabel_sourceelec{i_sub}{i_sourceelec, 1} =...
                    temp_anatlabel_sourceelec; %Reduced anat label
                temp_anatlabel_sourceelec2 = ...
                    cell2mat(SelElecs.([subfield_label1 'Effect']){temp_filt_elec,5});
                anatlabel_sourceelec{i_sub}{i_sourceelec, 1} = ...
                    strrep(temp_anatlabel_sourceelec2, ', ', '_'); %Full anat label
                
                %Read out anatomical region label for target elecs (per source elec)
                
                temp_num_targetelecs = size(SelElecs.Pairs.(... %Number of target elecs for current source elec
                    param.GC.ElecPairEffect{i_effect}).(...
                    param.GC.ElecPairRegion).Pairs_perelec.(...
                    temp_anatlabel_sourceelec),1);
                
                for i_targetelec = 1:temp_num_targetelecs
                    fulllabel_targetelec{i_sub}{i_targetelec, i_sourceelec} = ...
                        cell2mat(strcat(...
                        SelElecs.Pairs.(param.GC.ElecPairEffect{i_effect}).(...
                        param.GC.ElecPairRegion).Pairs_perelec.(...
                        temp_anatlabel_sourceelec){i_targetelec,1}, '_', ... %Elec label
                        SelElecs.Pairs.(param.GC.ElecPairEffect{i_effect}).(...
                        param.GC.ElecPairRegion).Pairs_perelec.(...
                        temp_anatlabel_sourceelec){i_targetelec,2}, '_', ... %Sub label
                        SelElecs.Pairs.(param.GC.ElecPairEffect{i_effect}).(...
                        param.GC.ElecPairRegion).Pairs_perelec.(...
                        temp_anatlabel_sourceelec){i_targetelec,5})); %Anat label
                    fulllabel_targetelec{i_sub}{i_targetelec, i_sourceelec} = ...
                        strrep(...
                        fulllabel_targetelec{i_sub}{i_targetelec, i_sourceelec}, ...
                        ', ', '_');
                    anatlabel_targetelec{i_sub}{i_targetelec, i_sourceelec} = ...
                        cell2mat(...
                        SelElecs.Pairs.(param.GC.ElecPairEffect{i_effect}).(...
                        param.GC.ElecPairRegion).Pairs_perelec.(...
                        temp_anatlabel_sourceelec){i_targetelec,5});
                    anatlabel_targetelec{i_sub}{i_targetelec, i_sourceelec} = ...
                        strrep(...
                        anatlabel_targetelec{i_sub}{i_targetelec, i_sourceelec}, ...
                        ', ', '_');
                end
            end
            %In cases where source and target elec are identical (e.g.,
            %for Pred_Pred/PE_PE effects) add an empty entry in place of
            %the identical elec along the diagonal, to keep the matrix 
            %similar to the GC output matrix
            if strcmp(param.GC.ElecPairEffect{i_effect},  'Pred_Pred') || ...
                    strcmp(param.GC.ElecPairEffect{i_effect},  'PE_PE')
                
                temp_fulllabel_targetelec = ...
                    cell(length(GCdata{i_sub}.ind_pairedelecs_to{i_effect}), ...
                    length(GCdata{i_sub}.ind_pairedelecs_from{i_effect}));
                temp_anatlabel_targetelec = ...
                    cell(length(GCdata{i_sub}.ind_pairedelecs_to{i_effect}), ...
                    length(GCdata{i_sub}.ind_pairedelecs_from{i_effect}));
                
                for i_sourceelec = 1:size(temp_fulllabel_targetelec,2)
                    outputposchange_targetelec = 0;
                    for i_targetelec = 1:size(fulllabel_targetelec{i_sub},1)
                        if i_sourceelec == i_targetelec
                            outputposchange_targetelec = outputposchange_targetelec + 1;
                        end
                        temp_fulllabel_targetelec{i_targetelec + outputposchange_targetelec, i_sourceelec} = ...
                            fulllabel_targetelec{i_sub}{i_targetelec, i_sourceelec};
                        temp_anatlabel_targetelec{i_targetelec + outputposchange_targetelec, i_sourceelec} = ...
                            anatlabel_targetelec{i_sub}{i_targetelec, i_sourceelec};                        
                    end
                end
                fulllabel_targetelec{i_sub} = temp_fulllabel_targetelec;
                anatlabel_targetelec{i_sub} = temp_anatlabel_targetelec;
            end  
            %Note: For Pred_PE and PE_Pred, in cases where there is the
            %same electrode as source and target, also a NaN value is
            %introduced. However, here the NaN value is placed at the end 
            %of the (source-elec-specific) column and not at the respective
            %position of the target elec. Since later read-out is
            %individual across target elecs for each source elec, this does
            %not interfere withthe selection of anatomical regions
        end
    end
    
    %2.2 Read out all present anatomical locations across all subjects
    anatlabel_sourceelec_allsub = [];
    anatlabel_targetelec_allsub = [];
%     for i_sub = 1:length(subs)
%         if ~isempty(anatlabel_sourceelec{i_sub})            
%             anatlabel_sourceelec_allsub = ...
%                 [anatlabel_sourceelec_allsub; anatlabel_sourceelec{i_sub}];            
%             for i_sourceelec = 1:length(anatlabel_sourceelec{i_sub})
%                 for i_targetelec = 1:size(anatlabel_targetelec{i_sub},1)
%                     if ~isempty(anatlabel_targetelec{i_sub}{i_targetelec, i_sourceelec})
%                         anatlabel_targetelec_allsub = ...
%                             [anatlabel_targetelec_allsub; ...
%                             anatlabel_targetelec{i_sub}(i_targetelec, i_sourceelec)];
%                     end
%                 end
%             end
%         end
%     end    
%     anatreg{i_effect}.label_unique = unique([anatlabel_sourceelec_allsub; anatlabel_targetelec_allsub]);
    anatreg{i_effect}.label_unique = ...
        {'AntPFC'; 'AntPFC_IFG'; 'AntPFC_PrecentralG'; ...
        'VentralT'; 'VentralT_STG'; 'VentralT_MTG'; ...
        'SupParLob'; 'SupParLob_PostcentralG'; 'SupParLob_SupramarginalG'; ...
        'OccipitalL'};
    
    %Create filter limiting to-be-analyzed anatomical regions to the ones selected
    for i_catlabels = 1:length(anatreg{i_effect}.label_unique)
        anatreg{i_effect}.filter(i_catlabels,1) = ...
            any(strcmp(AnatReg_CatLabels, anatreg{i_effect}.label_unique{i_catlabels}));
    end
    anatreg{i_effect}.filter_label = [num2str(sum(anatreg{i_effect}.filter)) 'AnatReg'];
    
    %Flexibly determine if and how to suballocate anat regions
    %For each unique label, create index and index of all sub-labels
    anatreg{i_effect}.labelindex_aggregated = [];
    for i_catlabels = 1:length(anatreg{i_effect}.label_unique)
        temp_index = ...
            find(~cellfun('isempty', strfind(...
            anatreg{i_effect}.label_unique, anatreg{i_effect}.label_unique{i_catlabels})));
        if ~isempty(temp_index)
            anatreg{i_effect}.labelindex_aggregated(i_catlabels,:) = temp_index;
        else
            anatreg{i_effect}.labelindex_aggregated(i_catlabels,:) = NaN;
        end
    end
    
    %Adjust anat cat labels to more fitting anatomical labels
    anatreg{i_effect}.label_aggregated = [];
    for i_catlabels = 1:length(anatreg{i_effect}.label_unique)
        if strcmp(anatreg{i_effect}.label_unique{i_catlabels}, 'AntPFC')
            anatreg{i_effect}.label_aggregated{i_catlabels,1} = 'Frontal';
        elseif strcmp(anatreg{i_effect}.label_unique{i_catlabels}, 'AntPFC_IFG')
            anatreg{i_effect}.label_aggregated{i_catlabels,1} = 'IFG';
        elseif strcmp(anatreg{i_effect}.label_unique{i_catlabels}, 'AntPFC_PrecentralG')
            anatreg{i_effect}.label_aggregated{i_catlabels,1} = 'PrecG';
        elseif strcmp(anatreg{i_effect}.label_unique{i_catlabels}, 'VentralT')
            anatreg{i_effect}.label_aggregated{i_catlabels,1} = 'Temporal';
        elseif strcmp(anatreg{i_effect}.label_unique{i_catlabels}, 'VentralT_STG')
            anatreg{i_effect}.label_aggregated{i_catlabels,1} = 'STG';
        elseif strcmp(anatreg{i_effect}.label_unique{i_catlabels}, 'VentralT_MTG')
            anatreg{i_effect}.label_aggregated{i_catlabels,1} = 'MTG';
        elseif strcmp(anatreg{i_effect}.label_unique{i_catlabels}, 'SupParLob')
            anatreg{i_effect}.label_aggregated{i_catlabels,1} = 'Parietal';
        elseif strcmp(anatreg{i_effect}.label_unique{i_catlabels}, 'SupParLob_PostcentralG')
            anatreg{i_effect}.label_aggregated{i_catlabels,1} = 'PostcG';
        elseif strcmp(anatreg{i_effect}.label_unique{i_catlabels}, 'SupParLob_SupramarginalG')
            anatreg{i_effect}.label_aggregated{i_catlabels,1} = 'SupmarG';
        elseif strcmp(anatreg{i_effect}.label_unique{i_catlabels}, 'OccipitalL')
            anatreg{i_effect}.label_aggregated{i_catlabels,1} = 'OcciL';
        end
    end
    
    
    %2.3 Assign anatreg index and label for each source and target elec per subject
    for i_sub = 1:length(subs)
        if ~isempty(GCdata{i_sub}.temporalGC{i_effect})
            for i_sourceelec = 1:length(GCdata{i_sub}.ind_pairedelecs_from{i_effect})
                for i_anatlabels = 1:length(anatreg{i_effect}.label_aggregated)
                    if contains(anatlabel_sourceelec{i_sub}{i_sourceelec}, ...
                            anatreg{i_effect}.label_unique{i_anatlabels})
                        anatreg{i_effect}.sourceelec_index{i_sub}(i_sourceelec,1) = ...
                            i_anatlabels;
                        anatreg{i_effect}.sourceelec_label{i_sub}{i_sourceelec,1} = ...
                            anatreg{i_effect}.label_aggregated{i_anatlabels};
                    end
                end
                %Labels of target elecs vary depending on their source elecs
                for i_targetelec = 1:size(anatlabel_targetelec{i_sub},1)
                    for i_anatlabels = 1:length(anatreg{i_effect}.label_aggregated)
                        if ~isempty(anatlabel_targetelec{i_sub}{i_targetelec,i_sourceelec})
                            if contains(anatlabel_targetelec{i_sub}{i_targetelec,i_sourceelec}, ...
                                    anatreg{i_effect}.label_unique{i_anatlabels})
                                anatreg{i_effect}.targetelec_index{i_sub}(i_targetelec,i_sourceelec) = ...
                                    i_anatlabels;
                                anatreg{i_effect}.targetelec_label{i_sub}{i_targetelec,i_sourceelec} = ...
                                    anatreg{i_effect}.label_aggregated{i_anatlabels};
                            end
                        else
                            anatreg{i_effect}.targetelec_index{i_sub}(i_targetelec,i_sourceelec) = ...
                                nan;
                            anatreg{i_effect}.targetelec_label{i_sub}{i_targetelec,i_sourceelec} = ...
                                nan;
                        end
                    end
                end
            end
        end
    end
    
    
    %2.4 Pool elec pair-wise GC estimates across subjects per selected anatomical region
    %Create empty structs
    for i_anatlabels_source = 1:length(anatreg{i_effect}.label_aggregated)
        for i_anatlabels_target = 1:length(anatreg{i_effect}.label_aggregated)
            for i_TD = 1:length(ToneDur_text)                
                Gavg_tempGC_peranatreg.source2target{i_effect}{...
                    i_anatlabels_source,i_anatlabels_target,i_TD} = [];
                Gavg_tempGC_peranatreg.target2source{i_effect}{...
                    i_anatlabels_source,i_anatlabels_target,i_TD} = [];
                
                Gavg_spectGC_peranatreg.source2target{i_effect}{...
                    i_anatlabels_source,i_anatlabels_target,i_TD} = [];
                Gavg_spectGC_peranatreg.target2source{i_effect}{...
                    i_anatlabels_source,i_anatlabels_target,i_TD} = [];
                
                Gavg_tempGC_peranatreg.subject_index{i_effect}{...
                    i_anatlabels_source,i_anatlabels_target,i_TD} = [];
            end
        end
    end
    NumGC_peranatreg{i_effect} = ...
        zeros(length(anatreg{i_effect}.label_aggregated), ...
        length(anatreg{i_effect}.label_aggregated), ...
        length(ToneDur_text)); %Dim: AnatLabelSource, AnatLabelTarget, TD
    
    %Pool GC estimates for similar anat reg across electrode pairs    
    for i_TD = 1:length(ToneDur_text)        
        for i_anatlabels_source = 1:length(anatreg{i_effect}.label_aggregated)
            for i_anatlabels_target = 1:length(anatreg{i_effect}.label_aggregated)
                
                %Empty structs generated for each source/target anatomical region, 
                %since we pool over this variable
                temp_tempGC.source2target   = []; 
                temp_tempGC.target2source   = [];
                temp_spectGC.target2source  = [];
                temp_spectGC.source2target  = [];
                temp_tempGC.subject_index   = [];
                temp_spectGC_repcount       = 0;
                
                for i_sub = 1:length(subs)
                    if ~isempty(GCdata{i_sub}.temporalGC{i_effect}) && ...
                            isreal(GCdata{i_sub}.temporalGC{i_effect}{i_TD}.source2target)                        
                        for i_sourceelec = 1:length(GCdata{i_sub}.ind_pairedelecs_from{i_effect})
                            if any(anatreg{i_effect}.sourceelec_index{i_sub}(i_sourceelec) == ... 
                                    anatreg{i_effect}.labelindex_aggregated(i_anatlabels_source,:))
                                    %Filter: Select GC value only if corresponing source elec corresponds to current anat reg

                                for i_targetelec = 1:size(anatreg{i_effect}.targetelec_index{i_sub},1) 
                                    if any(anatreg{i_effect}.targetelec_index{i_sub}(i_targetelec,i_sourceelec) == ...
                                            anatreg{i_effect}.labelindex_aggregated(i_anatlabels_target,:))
                                            %Filter: Select GC value only if corresponing target elec corresponds to current anat reg
                  
                                        label_targetelec = strtok(fulllabel_targetelec{i_sub}{i_targetelec,i_sourceelec},'_');
                                        disp(['Found GC value for source loc [' anatreg{i_effect}.label_aggregated{i_anatlabels_source} ...
                                            '(' GCdata{i_sub}.label_allelecs{GCdata{i_sub}.ind_pairedelecs_from{i_effect}(i_sourceelec)} ')] ' ...
                                            'to target loc [' anatreg{i_effect}.label_aggregated{i_anatlabels_target}  '('...
                                            label_targetelec ')]' ...
                                            ' for sub: ' subs{i_sub} ...
                                            ', TD: ' num2str(i_TD)]);
                                        
                                        %Pool GC across electrode pairs from same anatomical region
                                        temp_tempGC.source2target = ...
                                            [temp_tempGC.source2target; ...
                                            squeeze(GCdata{i_sub}.temporalGC{i_effect}{i_TD...
                                            }.source2target(i_sourceelec, i_targetelec, :))'];
                                        temp_tempGC.target2source = ...
                                            [temp_tempGC.target2source; ...
                                            squeeze(GCdata{i_sub}.temporalGC{i_effect}{i_TD...
                                            }.target2source(i_sourceelec, i_targetelec, :))'];
                                        
                                        temp_spectGC_repcount = temp_spectGC_repcount + 1;
                                        temp_spectGC.source2target(:,:,temp_spectGC_repcount) = ...
                                            squeeze(GCdata{i_sub}.spectralGC{i_effect}{i_TD...
                                            }.source2target(i_sourceelec, i_targetelec, :, :));
                                        temp_spectGC.target2source(:,:,temp_spectGC_repcount) = ...
                                            squeeze(GCdata{i_sub}.spectralGC{i_effect}{i_TD...
                                            }.target2source(i_sourceelec, i_targetelec, :, :));
                                        
                                        temp_tempGC.subject_index = ...
                                            [temp_tempGC.subject_index; i_sub];
                                    end
                                end
                            end
                        end
                    end
                end
                %Count total number of valid electrode pairs for current anat region
                if ~isempty(temp_tempGC.source2target)
                    NumGC_peranatreg{i_effect}(i_anatlabels_source, i_anatlabels_target, i_TD) = ...
                        sum(~isnan(temp_tempGC.source2target(:,1)));
                else
                    NumGC_peranatreg{i_effect}(i_anatlabels_source, i_anatlabels_target, i_TD) = ...
                        0;
                end
                
                %Store pooled data in common struct
                Gavg_tempGC_peranatreg.source2target{i_effect}{...
                    i_anatlabels_source,i_anatlabels_target,i_TD} = ...
                    temp_tempGC.source2target;
                Gavg_tempGC_peranatreg.target2source{i_effect}{...
                    i_anatlabels_source,i_anatlabels_target,i_TD} = ...
                    temp_tempGC.target2source;
                Gavg_spectGC_peranatreg.source2target{i_effect}{...
                    i_anatlabels_source,i_anatlabels_target,i_TD} = ...
                     temp_spectGC.source2target;
                Gavg_spectGC_peranatreg.target2source{i_effect}{...
                    i_anatlabels_source,i_anatlabels_target,i_TD} = ...
                    temp_spectGC.target2source;
                
                Gavg_tempGC_peranatreg.subject_index{i_effect}{...
                    i_anatlabels_source,i_anatlabels_target,i_TD} = ...
                    temp_tempGC.subject_index;
            end
        end
    end

    %Optional: Perform 1 sample KS test to test GC values across elec pairs (per time point and TD)
    %for normality (0 = null hypothesis of normal dist, 1 = rejection of null)    
    for i_TD = 1:length(ToneDur_text)
        KS_mat{i_TD} = ...
            nan(length(anatreg{i_effect}.label_aggregated), ...
            length(anatreg{i_effect}.label_aggregated), ...
            size(GCdata{i_sub}.temporalGC{i_effect}{1}.source2target,3));
        for i_sourceelec = 1:length(anatreg{i_effect}.label_aggregated)
            for i_targetelec = 1:length(anatreg{i_effect}.label_aggregated)
                for i_toneepoch = 1:length(param.GC.tone_aggregation)
                    if any(squeeze(Gavg_tempGC_peranatreg.source2target{i_effect}...
                            {i_sourceelec, i_targetelec, i_TD}))
                        KS_mat{i_TD}(i_sourceelec, i_targetelec, i_toneepoch) = ...
                            kstest(...
                            Gavg_tempGC_peranatreg.source2target{i_effect}{...
                            i_sourceelec, i_targetelec, i_TD}(:,i_toneepoch),...
                            'Alpha', 0.05);
                    end
                end
            end
        end
        KStestdata.sum_nonan{i_effect}{i_TD}  = length(find(~isnan(KS_mat{i_TD}(:,:,:))));
        KStestdata.sum_sign{i_effect}{i_TD}   = length(find(KS_mat{i_TD}(:,:,:) == 1));
        disp([num2str(KStestdata.sum_sign{i_effect}{i_TD}) ' / ' ...
            num2str(KStestdata.sum_nonan{i_effect}{i_TD}) ...
            ' entries not normally distributed for ' title_label1 ' - ' title_label2])
    end
end


%% 3. Plot GC estimate for time and frequency domain within (ie., Pred_pred/PE_PE) effects
%Plot median and IQR of GC estimates for each anatomical region as a
%shaded line plot. Different anatomical pairs are plotted in subplots.
%Plotting is separetly done for within (ie., Pred_pred/PE_PE) and between
%(Pred_PE, PE_Pred) effects.

for i_TD = 1:length(ToneDur_text)
    
    %% 3.1 within (ie., Pred_pred/PE_PE)
    %Summary GC and number of pairings across anat reg per tone group
    f1 = figure('visible',set_visibility);
    set(f1,'units','normalized','outerposition',[0 0 1 1]) %full screen
    DimSubplot = [length(AnatReg_CatLabels) 2];
    sgtitle({['Time-domain pooled (n = ' num2str(length(subs)) ...
        ') pw GC estimates (median +- IQR) per tone group per anat region'], ...
        [ToneDur_text{i_TD} 's TD; ' ...
        param.GC.InputDataType{1} ', ' param.GC.epochdur_ms_label]}, 'Interpreter', 'none')
    subplot_num = 0;
    
    %3.1.1 Subplot 1/1 Pred-Pred & Reg1 - Reg2
        i_effect = 1;    
        subplot_num = 1;
        temp_currfilt = find(anatreg{i_effect}.filter == 1);
        anatreg{i_effect}.label_aggregated(anatreg{i_effect}.filter)
               
        f_sub1 = subplot(DimSubplot(1),DimSubplot(2),subplot_num);
        %Lineplot with shading (Print double to have it in front and in legend)
        hold on
        sb = shadedErrorBar((1:length(param.GC.tone_aggregation))-0.05, ...
            nanmedian(Gavg_tempGC_peranatreg.source2target{i_effect}...
            {temp_currfilt(1),temp_currfilt(2),i_TD}), ...
            iqr(Gavg_tempGC_peranatreg.source2target{i_effect}...
            {temp_currfilt(1),temp_currfilt(2),i_TD}), ...
            'lineprops',{'b-d','markerfacecolor','b','markeredgecolor','k'},...
            'transparent',1);  
        sb.mainLine.LineWidth = 2;
        sb.mainLine.MarkerSize = 10;
        hold on;
        sb = shadedErrorBar((1:length(param.GC.tone_aggregation))+0.05, ...
            nanmedian(Gavg_tempGC_peranatreg.source2target{i_effect}...
            {temp_currfilt(2),temp_currfilt(1),i_TD}), ...
            iqr(Gavg_tempGC_peranatreg.source2target{i_effect}...
            {temp_currfilt(2),temp_currfilt(1),i_TD}), ...
            'lineprops',{'r-d','markerfacecolor','r','markeredgecolor','k'},...
            'transparent',1);
        sb.mainLine.LineWidth = 2;
        sb.mainLine.MarkerSize = 10;
        Ylim_temp = f_sub1.YLim;

        %Single-elec markers, color-coded by subject
        num_elec = length(Gavg_tempGC_peranatreg.source2target{i_effect}...
            {temp_currfilt(1),temp_currfilt(2),i_TD});
        c1 = cool(length(subs));
        c2 = hot(length(subs));
        for i_elec = 1:num_elec
            curr_sub = Gavg_tempGC_peranatreg.subject_index{i_effect}...
                {temp_currfilt(1),temp_currfilt(2),i_TD}(i_elec);
            hold on;
            %Markers for Reg1 -> Reg2 (cool)
            sc = scatter((1:length(param.GC.tone_aggregation))-...
                (0.02*curr_sub)-0.05, ...
                Gavg_tempGC_peranatreg.source2target{i_effect}...
                {temp_currfilt(1),temp_currfilt(2),i_TD}(i_elec,:),20,'o');
            sc.MarkerFaceColor = c1(curr_sub,:);
            sc.MarkerEdgeColor = 'k';
            sc.MarkerFaceAlpha = 0.5;

            %Markers for Reg1 <- Reg2 (warm)        
            sc = scatter((1:length(param.GC.tone_aggregation))+...
                (0.02*curr_sub)+0.05, ...
                Gavg_tempGC_peranatreg.source2target{i_effect}...
                {temp_currfilt(2),temp_currfilt(1),i_TD}(i_elec,:),20,'o');
            sc.MarkerFaceColor = c2(curr_sub,:);
            sc.MarkerEdgeColor = 'k';
            sc.MarkerFaceAlpha = 0.5;        
        end

        %Lineplot with shading
        hold on
        sb = shadedErrorBar((1:length(param.GC.tone_aggregation))-0.05, ...
            nanmedian(Gavg_tempGC_peranatreg.source2target{i_effect}...
            {temp_currfilt(1),temp_currfilt(2),i_TD}), ...
            iqr(Gavg_tempGC_peranatreg.source2target{i_effect}...
            {temp_currfilt(1),temp_currfilt(2),i_TD}), ...
            'lineprops',{'b-d','markerfacecolor','b','markeredgecolor','k'},...
            'transparent',1);  
        sb.mainLine.LineWidth = 2;
        sb.mainLine.MarkerSize = 10;
        hold on;
        sb = shadedErrorBar((1:length(param.GC.tone_aggregation))+0.05, ...
            nanmedian(Gavg_tempGC_peranatreg.source2target{i_effect}...
            {temp_currfilt(2),temp_currfilt(1),i_TD}), ...
            iqr(Gavg_tempGC_peranatreg.source2target{i_effect}...
            {temp_currfilt(2),temp_currfilt(1),i_TD}), ...
            'lineprops',{'r-d','markerfacecolor','r','markeredgecolor','k'},...
            'transparent',1);
        sb.mainLine.LineWidth = 2;
        sb.mainLine.MarkerSize = 10;

        f_sub1.XLim  = [1-0.3 length(param.GC.tone_aggregation)+0.3];
        if istrue(Yaxis_scaling)
            f_sub1.YLim  = [Ylim_temp(1) Ylim_temp(2)];
        end
        f_sub1.XTick =  [1:length(param.GC.tone_aggregation)];
        f_sub1.XTickLabel = param.GC.tone_aggregation;
        a = get(gca, 'XTickLabel');
        set(gca,'XTickLabel', a, 'fontsize', 8);
        f_sub1.XLabel.String = {'Tones'};
        f_sub1.XLabel.FontSize = 12;
        f_sub1.YLabel.String = {'GC estimate'};
        f_sub1.YLabel.FontSize = 12;
        legend([anatreg{i_effect}.label_aggregated{temp_currfilt(1)} '->' ...
            anatreg{i_effect}.label_aggregated{temp_currfilt(2)} ...
            ' (' num2str(NumGC_peranatreg{i_effect}...
            (temp_currfilt(1),temp_currfilt(2))) ' elec pairs)'], ...
            [anatreg{i_effect}.label_aggregated{temp_currfilt(2)} '->' ...
            anatreg{i_effect}.label_aggregated{temp_currfilt(1)} ...
            ' (' num2str(NumGC_peranatreg{i_effect}...
            (temp_currfilt(2),temp_currfilt(1))) ' elec pairs)'], ...
            'location','best')
        set(gca,'TickLabelInterpreter', 'none');

        title(['Pred -> Pred | ' ...
            anatreg{i_effect}.label_aggregated{temp_currfilt(1)} ' - '...
            anatreg{i_effect}.label_aggregated{temp_currfilt(2)}], ...
            'fontsize', 12);
        
    %3.1.2 Subplot 1/1 Pred-Pred & Reg1 - Reg3
        subplot_num = 3;

        f_sub2 = subplot(DimSubplot(1),DimSubplot(2),subplot_num);
        %Lineplot with shading (Print double to have it in front and in legend)
        hold on
        sb = shadedErrorBar((1:length(param.GC.tone_aggregation))-0.05, ...
            nanmedian(Gavg_tempGC_peranatreg.source2target{i_effect}...
            {temp_currfilt(1),temp_currfilt(3),i_TD}), ...
            iqr(Gavg_tempGC_peranatreg.source2target{i_effect}...
            {temp_currfilt(1),temp_currfilt(3),i_TD}), ...
            'lineprops',{'b-d','markerfacecolor','b','markeredgecolor','k'},...
            'transparent',1);  
        sb.mainLine.LineWidth = 2;
        sb.mainLine.MarkerSize = 10;
        hold on;
        sb = shadedErrorBar((1:length(param.GC.tone_aggregation))+0.05, ...
            nanmedian(Gavg_tempGC_peranatreg.source2target{i_effect}...
            {temp_currfilt(3),temp_currfilt(1),i_TD}), ...
            iqr(Gavg_tempGC_peranatreg.source2target{i_effect}...
            {temp_currfilt(3),temp_currfilt(1),i_TD}), ...
            'lineprops',{'r-d','markerfacecolor','r','markeredgecolor','k'},...
            'transparent',1);
        sb.mainLine.LineWidth = 2;
        sb.mainLine.MarkerSize = 10;
        Ylim_temp = f_sub2.YLim;

        %Single-elec markers, color-coded by subject
        num_elec = length(Gavg_tempGC_peranatreg.source2target{i_effect}...
            {temp_currfilt(3),temp_currfilt(1),i_TD});
        c1 = cool(length(subs));
        c2 = hot(length(subs));
        for i_elec = 1:num_elec
            curr_sub = Gavg_tempGC_peranatreg.subject_index{i_effect}...
                {temp_currfilt(1),temp_currfilt(3),i_TD}(i_elec);
            hold on;
            %Markers for Reg1 -> Reg2 (cool)
            sc = scatter((1:length(param.GC.tone_aggregation))-...
                (0.02*curr_sub)-0.05, ...
                Gavg_tempGC_peranatreg.source2target{i_effect}...
                {temp_currfilt(1),temp_currfilt(3),i_TD}(i_elec,:),20,'o');
            sc.MarkerFaceColor = c1(curr_sub,:);
            sc.MarkerEdgeColor = 'k';
            sc.MarkerFaceAlpha = 0.5;

            %Markers for Reg1 <- Reg2 (warm)        
            sc = scatter((1:length(param.GC.tone_aggregation))+...
                (0.02*curr_sub)+0.05, ...
                Gavg_tempGC_peranatreg.source2target{i_effect}...
                {temp_currfilt(3),temp_currfilt(1),i_TD}(i_elec,:),20,'o');
            sc.MarkerFaceColor = c2(curr_sub,:);
            sc.MarkerEdgeColor = 'k';
            sc.MarkerFaceAlpha = 0.5;        
        end

        %Lineplot with shading
        hold on
        sb = shadedErrorBar((1:length(param.GC.tone_aggregation))-0.05, ...
            nanmedian(Gavg_tempGC_peranatreg.source2target{i_effect}...
            {temp_currfilt(1),temp_currfilt(3),i_TD}), ...
            iqr(Gavg_tempGC_peranatreg.source2target{i_effect}...
            {temp_currfilt(1),temp_currfilt(3),i_TD}), ...
            'lineprops',{'b-d','markerfacecolor','b','markeredgecolor','k'},...
            'transparent',1);  
        sb.mainLine.LineWidth = 2;
        sb.mainLine.MarkerSize = 10;
        hold on;
        sb = shadedErrorBar((1:length(param.GC.tone_aggregation))+0.05, ...
            nanmedian(Gavg_tempGC_peranatreg.source2target{i_effect}...
            {temp_currfilt(3),temp_currfilt(1),i_TD}), ...
            iqr(Gavg_tempGC_peranatreg.source2target{i_effect}...
            {temp_currfilt(3),temp_currfilt(1),i_TD}), ...
            'lineprops',{'r-d','markerfacecolor','r','markeredgecolor','k'},...
            'transparent',1);
        sb.mainLine.LineWidth = 2;
        sb.mainLine.MarkerSize = 10;

        f_sub2.XLim  = [1-0.3 length(param.GC.tone_aggregation)+0.3];
        if istrue(Yaxis_scaling)
            f_sub2.YLim  = [Ylim_temp(1) Ylim_temp(2)];
        end
        f_sub2.XTick =  [1:length(param.GC.tone_aggregation)];
        f_sub2.XTickLabel = param.GC.tone_aggregation;
        a = get(gca, 'XTickLabel');
        set(gca,'XTickLabel', a, 'fontsize', 8);
        f_sub2.XLabel.String = {'Tones'};
        f_sub2.XLabel.FontSize = 12;
        f_sub2.YLabel.String = {'GC estimate'};
        f_sub2.YLabel.FontSize = 12;
        legend([anatreg{i_effect}.label_aggregated{temp_currfilt(1)} '->' ...
            anatreg{i_effect}.label_aggregated{temp_currfilt(3)} ...
            ' (' num2str(NumGC_peranatreg{i_effect}...
            (temp_currfilt(1),temp_currfilt(3))) ' elec pairs)'], ...
            [anatreg{i_effect}.label_aggregated{temp_currfilt(3)} '->' ...
            anatreg{i_effect}.label_aggregated{temp_currfilt(1)} ...
            ' (' num2str(NumGC_peranatreg{i_effect}...
            (temp_currfilt(3),temp_currfilt(1))) ' elec pairs)'], ...
            'location','best')
        set(gca,'TickLabelInterpreter', 'none');

        title(['Pred -> Pred | ' ...
            anatreg{i_effect}.label_aggregated{temp_currfilt(1)} ' - '...
            anatreg{i_effect}.label_aggregated{temp_currfilt(3)}], ...
            'fontsize', 12);

    %3.1.3 Subplot 1/1 Pred-Pred & Reg2 - Reg3
        subplot_num = 5;

        f_sub3 = subplot(DimSubplot(1),DimSubplot(2),subplot_num);
        %Lineplot with shading (Print double to have it in front and in legend)
        hold on
        sb = shadedErrorBar((1:length(param.GC.tone_aggregation))-0.05, ...
            nanmedian(Gavg_tempGC_peranatreg.source2target{i_effect}...
            {temp_currfilt(2),temp_currfilt(3),i_TD}), ...
            iqr(Gavg_tempGC_peranatreg.source2target{i_effect}...
            {temp_currfilt(2),temp_currfilt(3),i_TD}), ...
            'lineprops',{'b-d','markerfacecolor','b','markeredgecolor','k'},...
            'transparent',1);  
        sb.mainLine.LineWidth = 2;
        sb.mainLine.MarkerSize = 10;
        hold on;
        sb = shadedErrorBar((1:length(param.GC.tone_aggregation))+0.05, ...
            nanmedian(Gavg_tempGC_peranatreg.source2target{i_effect}...
            {temp_currfilt(3),temp_currfilt(2),i_TD}), ...
            iqr(Gavg_tempGC_peranatreg.source2target{i_effect}...
            {temp_currfilt(3),temp_currfilt(2),i_TD}), ...
            'lineprops',{'r-d','markerfacecolor','r','markeredgecolor','k'},...
            'transparent',1);
        sb.mainLine.LineWidth = 2;
        sb.mainLine.MarkerSize = 10;
        Ylim_temp = f_sub3.YLim;

        %Single-elec markers, color-coded by subject
        num_elec = length(Gavg_tempGC_peranatreg.source2target{i_effect}...
            {temp_currfilt(3),temp_currfilt(2),i_TD});
        c1 = cool(length(subs));
        c2 = hot(length(subs));
        for i_elec = 1:num_elec
            curr_sub = Gavg_tempGC_peranatreg.subject_index{i_effect}...
                {temp_currfilt(2),temp_currfilt(3),i_TD}(i_elec);
            hold on;
            %Markers for Reg1 -> Reg2 (cool)
            sc = scatter((1:length(param.GC.tone_aggregation))-...
                (0.02*curr_sub)-0.05, ...
                Gavg_tempGC_peranatreg.source2target{i_effect}...
                {temp_currfilt(2),temp_currfilt(3),i_TD}(i_elec,:),20,'o');
            sc.MarkerFaceColor = c1(curr_sub,:);
            sc.MarkerEdgeColor = 'k';
            sc.MarkerFaceAlpha = 0.5;

            %Markers for Reg1 <- Reg2 (warm)        
            sc = scatter((1:length(param.GC.tone_aggregation))+...
                (0.02*curr_sub)+0.05, ...
                Gavg_tempGC_peranatreg.source2target{i_effect}...
                {temp_currfilt(3),temp_currfilt(2),i_TD}(i_elec,:),20,'o');
            sc.MarkerFaceColor = c2(curr_sub,:);
            sc.MarkerEdgeColor = 'k';
            sc.MarkerFaceAlpha = 0.5;        
        end

        %Lineplot with shading
        hold on
        sb = shadedErrorBar((1:length(param.GC.tone_aggregation))-0.05, ...
            nanmedian(Gavg_tempGC_peranatreg.source2target{i_effect}...
            {temp_currfilt(2),temp_currfilt(3),i_TD}), ...
            iqr(Gavg_tempGC_peranatreg.source2target{i_effect}...
            {temp_currfilt(2),temp_currfilt(3),i_TD}), ...
            'lineprops',{'b-d','markerfacecolor','b','markeredgecolor','k'},...
            'transparent',1);  
        sb.mainLine.LineWidth = 2;
        sb.mainLine.MarkerSize = 10;
        hold on;
        sb = shadedErrorBar((1:length(param.GC.tone_aggregation))+0.05, ...
            nanmedian(Gavg_tempGC_peranatreg.source2target{i_effect}...
            {temp_currfilt(3),temp_currfilt(2),i_TD}), ...
            iqr(Gavg_tempGC_peranatreg.source2target{i_effect}...
            {temp_currfilt(3),temp_currfilt(2),i_TD}), ...
            'lineprops',{'r-d','markerfacecolor','r','markeredgecolor','k'},...
            'transparent',1);
        sb.mainLine.LineWidth = 2;
        sb.mainLine.MarkerSize = 10;

        f_sub3.XLim  = [1-0.3 length(param.GC.tone_aggregation)+0.3];
        if istrue(Yaxis_scaling)
            f_sub3.YLim  = [Ylim_temp(1) Ylim_temp(2)];
        end
        f_sub3.XTick =  [1:length(param.GC.tone_aggregation)];
        f_sub3.XTickLabel = param.GC.tone_aggregation;
        a = get(gca, 'XTickLabel');
        set(gca,'XTickLabel', a, 'fontsize', 8);
        f_sub3.XLabel.String = {'Tones'};
        f_sub3.XLabel.FontSize = 12;
        f_sub3.YLabel.String = {'GC estimate'};
        f_sub3.YLabel.FontSize = 12;
        legend([anatreg{i_effect}.label_aggregated{temp_currfilt(2)} '->' ...
            anatreg{i_effect}.label_aggregated{temp_currfilt(3)} ...
            ' (' num2str(NumGC_peranatreg{i_effect}...
            (temp_currfilt(2),temp_currfilt(3))) ' elec pairs)'], ...
            [anatreg{i_effect}.label_aggregated{temp_currfilt(3)} '->' ...
            anatreg{i_effect}.label_aggregated{temp_currfilt(2)} ...
            ' (' num2str(NumGC_peranatreg{i_effect}...
            (temp_currfilt(3),temp_currfilt(2))) ' elec pairs)'], ...
            'location','best')
        set(gca,'TickLabelInterpreter', 'none');

        title(['Pred -> Pred | ' ...
            anatreg{i_effect}.label_aggregated{temp_currfilt(2)} ' - '...
            anatreg{i_effect}.label_aggregated{temp_currfilt(3)}], ...
            'fontsize', 12);        
        
    %3.2.1 Subplot 2/1 PE-PE & Reg1 - Reg2    
        i_effect = 2;    
        subplot_num = 2;
               
        f_sub4 = subplot(DimSubplot(1),DimSubplot(2),subplot_num);
        %Lineplot with shading (Print double to have it in front and in legend)
        hold on
        sb = shadedErrorBar((1:length(param.GC.tone_aggregation))-0.05, ...
            nanmedian(Gavg_tempGC_peranatreg.source2target{i_effect}...
            {temp_currfilt(1),temp_currfilt(2),i_TD}), ...
            iqr(Gavg_tempGC_peranatreg.source2target{i_effect}...
            {temp_currfilt(1),temp_currfilt(2),i_TD}), ...
            'lineprops',{'b-d','markerfacecolor','b','markeredgecolor','k'},...
            'transparent',1);  
        sb.mainLine.LineWidth = 2;
        sb.mainLine.MarkerSize = 10;
        hold on;
        sb = shadedErrorBar((1:length(param.GC.tone_aggregation))+0.05, ...
            nanmedian(Gavg_tempGC_peranatreg.source2target{i_effect}...
            {temp_currfilt(2),temp_currfilt(1),i_TD}), ...
            iqr(Gavg_tempGC_peranatreg.source2target{i_effect}...
            {temp_currfilt(2),temp_currfilt(1),i_TD}), ...
            'lineprops',{'r-d','markerfacecolor','r','markeredgecolor','k'},...
            'transparent',1);
        sb.mainLine.LineWidth = 2;
        sb.mainLine.MarkerSize = 10;
        Ylim_temp = f_sub4.YLim;

        %Single-elec markers, color-coded by subject
        num_elec = length(Gavg_tempGC_peranatreg.source2target{i_effect}...
            {temp_currfilt(1),temp_currfilt(2),i_TD});
        c1 = cool(length(subs));
        c2 = hot(length(subs));
        for i_elec = 1:num_elec
            curr_sub = Gavg_tempGC_peranatreg.subject_index{i_effect}...
                {temp_currfilt(1),temp_currfilt(2),i_TD}(i_elec);
            hold on;
            %Markers for Reg1 -> Reg2 (cool)
            sc = scatter((1:length(param.GC.tone_aggregation))-...
                (0.02*curr_sub)-0.05, ...
                Gavg_tempGC_peranatreg.source2target{i_effect}...
                {temp_currfilt(1),temp_currfilt(2),i_TD}(i_elec,:),20,'o');
            sc.MarkerFaceColor = c1(curr_sub,:);
            sc.MarkerEdgeColor = 'k';
            sc.MarkerFaceAlpha = 0.5;
            %Markers for Reg1 <- Reg2 (warm)        
            sc = scatter((1:length(param.GC.tone_aggregation))+...
                (0.02*curr_sub)+0.05, ...
                Gavg_tempGC_peranatreg.source2target{i_effect}...
                {temp_currfilt(2),temp_currfilt(1),i_TD}(i_elec,:),20,'o');
            sc.MarkerFaceColor = c2(curr_sub,:);
            sc.MarkerEdgeColor = 'k';
            sc.MarkerFaceAlpha = 0.5;        
        end

        %Lineplot with shading
        hold on
        sb = shadedErrorBar((1:length(param.GC.tone_aggregation))-0.05, ...
            nanmedian(Gavg_tempGC_peranatreg.source2target{i_effect}...
            {temp_currfilt(1),temp_currfilt(2),i_TD}), ...
            iqr(Gavg_tempGC_peranatreg.source2target{i_effect}...
            {temp_currfilt(1),temp_currfilt(2),i_TD}), ...
            'lineprops',{'b-d','markerfacecolor','b','markeredgecolor','k'},...
            'transparent',1);  
        sb.mainLine.LineWidth = 2;
        sb.mainLine.MarkerSize = 10;
        hold on;
        sb = shadedErrorBar((1:length(param.GC.tone_aggregation))+0.05, ...
            nanmedian(Gavg_tempGC_peranatreg.source2target{i_effect}...
            {temp_currfilt(2),temp_currfilt(1),i_TD}), ...
            iqr(Gavg_tempGC_peranatreg.source2target{i_effect}...
            {temp_currfilt(2),temp_currfilt(1),i_TD}), ...
            'lineprops',{'r-d','markerfacecolor','r','markeredgecolor','k'},...
            'transparent',1);
        sb.mainLine.LineWidth = 2;
        sb.mainLine.MarkerSize = 10;

        f_sub4.XLim  = [1-0.3 length(param.GC.tone_aggregation)+0.3];
        if istrue(Yaxis_scaling)
            f_sub4.YLim  = [Ylim_temp(1) Ylim_temp(2)];
        end
        f_sub4.XTick =  [1:length(param.GC.tone_aggregation)];
        f_sub4.XTickLabel = param.GC.tone_aggregation;
        a = get(gca, 'XTickLabel');
        set(gca,'XTickLabel', a, 'fontsize', 8);
        f_sub4.XLabel.String = {'Tones'};
        f_sub4.XLabel.FontSize = 12;
        f_sub4.YLabel.String = {'GC estimate'};
        f_sub4.YLabel.FontSize = 12;
        legend([anatreg{i_effect}.label_aggregated{temp_currfilt(1)} '->' ...
            anatreg{i_effect}.label_aggregated{temp_currfilt(2)} ...
            ' (' num2str(NumGC_peranatreg{i_effect}...
            (temp_currfilt(1),temp_currfilt(2))) ' elec pairs)'], ...
            [anatreg{i_effect}.label_aggregated{temp_currfilt(2)} '->' ...
            anatreg{i_effect}.label_aggregated{temp_currfilt(1)} ...
            ' (' num2str(NumGC_peranatreg{i_effect}...
            (temp_currfilt(2),temp_currfilt(1))) ' elec pairs)'], ...
            'location','best')
        set(gca,'TickLabelInterpreter', 'none');

        title(['PE -> PE | ' ...
            anatreg{i_effect}.label_aggregated{temp_currfilt(1)} ' - '...
            anatreg{i_effect}.label_aggregated{temp_currfilt(2)}], ...
            'fontsize', 12);
        
    %3.2.2 Subplot 2/2 PE-PE & Reg1 - Reg3
        subplot_num = 4;
        f_sub5 = subplot(DimSubplot(1),DimSubplot(2),subplot_num);
        %Lineplot with shading (Print double to have it in front and in legend)
        hold on
        sb = shadedErrorBar((1:length(param.GC.tone_aggregation))-0.05, ...
            nanmedian(Gavg_tempGC_peranatreg.source2target{i_effect}...
            {temp_currfilt(1),temp_currfilt(3),i_TD}), ...
            iqr(Gavg_tempGC_peranatreg.source2target{i_effect}...
            {temp_currfilt(1),temp_currfilt(3),i_TD}), ...
            'lineprops',{'b-d','markerfacecolor','b','markeredgecolor','k'},...
            'transparent',1);  
        sb.mainLine.LineWidth = 2;
        sb.mainLine.MarkerSize = 10;
        hold on;
        sb = shadedErrorBar((1:length(param.GC.tone_aggregation))+0.05, ...
            nanmedian(Gavg_tempGC_peranatreg.source2target{i_effect}...
            {temp_currfilt(3),temp_currfilt(1),i_TD}), ...
            iqr(Gavg_tempGC_peranatreg.source2target{i_effect}...
            {temp_currfilt(3),temp_currfilt(1),i_TD}), ...
            'lineprops',{'r-d','markerfacecolor','r','markeredgecolor','k'},...
            'transparent',1);
        sb.mainLine.LineWidth = 2;
        sb.mainLine.MarkerSize = 10;
        Ylim_temp = f_sub5.YLim;

        %Single-elec markers, color-coded by subject
        num_elec = length(Gavg_tempGC_peranatreg.source2target{i_effect}...
            {temp_currfilt(3),temp_currfilt(1),i_TD});
        c1 = cool(length(subs));
        c2 = hot(length(subs));
        for i_elec = 1:num_elec
            curr_sub = Gavg_tempGC_peranatreg.subject_index{i_effect}...
                {temp_currfilt(1),temp_currfilt(3),i_TD}(i_elec);
            hold on;
            %Markers for Reg1 -> Reg2 (cool)
            sc = scatter((1:length(param.GC.tone_aggregation))-...
                (0.02*curr_sub)-0.05, ...
                Gavg_tempGC_peranatreg.source2target{i_effect}...
                {temp_currfilt(1),temp_currfilt(3),i_TD}(i_elec,:),20,'o');
            sc.MarkerFaceColor = c1(curr_sub,:);
            sc.MarkerEdgeColor = 'k';
            sc.MarkerFaceAlpha = 0.5;
            %Markers for Reg1 <- Reg2 (warm)        
            sc = scatter((1:length(param.GC.tone_aggregation))+...
                (0.02*curr_sub)+0.05, ...
                Gavg_tempGC_peranatreg.source2target{i_effect}...
                {temp_currfilt(3),temp_currfilt(1),i_TD}(i_elec,:),20,'o');
            sc.MarkerFaceColor = c2(curr_sub,:);
            sc.MarkerEdgeColor = 'k';
            sc.MarkerFaceAlpha = 0.5;        
        end

        %Lineplot with shading
        hold on
        sb = shadedErrorBar((1:length(param.GC.tone_aggregation))-0.05, ...
            nanmedian(Gavg_tempGC_peranatreg.source2target{i_effect}...
            {temp_currfilt(1),temp_currfilt(3),i_TD}), ...
            iqr(Gavg_tempGC_peranatreg.source2target{i_effect}...
            {temp_currfilt(1),temp_currfilt(3),i_TD}), ...
            'lineprops',{'b-d','markerfacecolor','b','markeredgecolor','k'},...
            'transparent',1);  
        sb.mainLine.LineWidth = 2;
        sb.mainLine.MarkerSize = 10;
        hold on;
        sb = shadedErrorBar((1:length(param.GC.tone_aggregation))+0.05, ...
            nanmedian(Gavg_tempGC_peranatreg.source2target{i_effect}...
            {temp_currfilt(3),temp_currfilt(1),i_TD}), ...
            iqr(Gavg_tempGC_peranatreg.source2target{i_effect}...
            {temp_currfilt(3),temp_currfilt(1),i_TD}), ...
            'lineprops',{'r-d','markerfacecolor','r','markeredgecolor','k'},...
            'transparent',1);
        sb.mainLine.LineWidth = 2;
        sb.mainLine.MarkerSize = 10;

        f_sub5.XLim  = [1-0.3 length(param.GC.tone_aggregation)+0.3];
        if istrue(Yaxis_scaling)
            f_sub5.YLim  = [Ylim_temp(1) Ylim_temp(2)];
        end
        f_sub5.XTick =  [1:length(param.GC.tone_aggregation)];
        f_sub5.XTickLabel = param.GC.tone_aggregation;
        a = get(gca, 'XTickLabel');
        set(gca,'XTickLabel', a, 'fontsize', 8);
        f_sub5.XLabel.String = {'Tones'};
        f_sub5.XLabel.FontSize = 12;
        f_sub5.YLabel.String = {'GC estimate'};
        f_sub5.YLabel.FontSize = 12;
        legend([anatreg{i_effect}.label_aggregated{temp_currfilt(1)} '->' ...
            anatreg{i_effect}.label_aggregated{temp_currfilt(3)} ...
            ' (' num2str(NumGC_peranatreg{i_effect}...
            (temp_currfilt(1),temp_currfilt(3))) ' elec pairs)'], ...
            [anatreg{i_effect}.label_aggregated{temp_currfilt(3)} '->' ...
            anatreg{i_effect}.label_aggregated{temp_currfilt(1)} ...
            ' (' num2str(NumGC_peranatreg{i_effect}...
            (temp_currfilt(3),temp_currfilt(1))) ' elec pairs)'], ...
            'location','best')
        set(gca,'TickLabelInterpreter', 'none');

        title(['PE -> PE | ' ...
            anatreg{i_effect}.label_aggregated{temp_currfilt(1)} ' - '...
            anatreg{i_effect}.label_aggregated{temp_currfilt(3)}], ...
            'fontsize', 12);

    %3.2.3 Subplot 2/3 PE-PE & Reg2 - Reg3
        subplot_num = 6;
        f_sub6 = subplot(DimSubplot(1),DimSubplot(2),subplot_num);
        %Lineplot with shading (Print double to have it in front and in legend)
        hold on
        sb = shadedErrorBar((1:length(param.GC.tone_aggregation))-0.05, ...
            nanmedian(Gavg_tempGC_peranatreg.source2target{i_effect}...
            {temp_currfilt(2),temp_currfilt(3),i_TD}), ...
            iqr(Gavg_tempGC_peranatreg.source2target{i_effect}...
            {temp_currfilt(2),temp_currfilt(3),i_TD}), ...
            'lineprops',{'b-d','markerfacecolor','b','markeredgecolor','k'},...
            'transparent',1);  
        sb.mainLine.LineWidth = 2;
        sb.mainLine.MarkerSize = 10;
        hold on;
        sb = shadedErrorBar((1:length(param.GC.tone_aggregation))+0.05, ...
            nanmedian(Gavg_tempGC_peranatreg.source2target{i_effect}...
            {temp_currfilt(3),temp_currfilt(2),i_TD}), ...
            iqr(Gavg_tempGC_peranatreg.source2target{i_effect}...
            {temp_currfilt(3),temp_currfilt(2),i_TD}), ...
            'lineprops',{'r-d','markerfacecolor','r','markeredgecolor','k'},...
            'transparent',1);
        sb.mainLine.LineWidth = 2;
        sb.mainLine.MarkerSize = 10;
        Ylim_temp = f_sub6.YLim;

        %Single-elec markers, color-coded by subject
        num_elec = length(Gavg_tempGC_peranatreg.source2target{i_effect}...
            {temp_currfilt(3),temp_currfilt(2),i_TD});
        c1 = cool(length(subs));
        c2 = hot(length(subs));
        for i_elec = 1:num_elec
            curr_sub = Gavg_tempGC_peranatreg.subject_index{i_effect}...
                {temp_currfilt(2),temp_currfilt(3),i_TD}(i_elec);
            hold on;
            %Markers for Reg1 -> Reg2 (cool)
            sc = scatter((1:length(param.GC.tone_aggregation))-...
                (0.02*curr_sub)-0.05, ...
                Gavg_tempGC_peranatreg.source2target{i_effect}...
                {temp_currfilt(2),temp_currfilt(3),i_TD}(i_elec,:),20,'o');
            sc.MarkerFaceColor = c1(curr_sub,:);
            sc.MarkerEdgeColor = 'k';
            sc.MarkerFaceAlpha = 0.5;
            %Markers for Reg1 <- Reg2 (warm)        
            sc = scatter((1:length(param.GC.tone_aggregation))+...
                (0.02*curr_sub)+0.05, ...
                Gavg_tempGC_peranatreg.source2target{i_effect}...
                {temp_currfilt(3),temp_currfilt(2),i_TD}(i_elec,:),20,'o');
            sc.MarkerFaceColor = c2(curr_sub,:);
            sc.MarkerEdgeColor = 'k';
            sc.MarkerFaceAlpha = 0.5;        
        end

        %Lineplot with shading
        hold on
        sb = shadedErrorBar((1:length(param.GC.tone_aggregation))-0.05, ...
            nanmedian(Gavg_tempGC_peranatreg.source2target{i_effect}...
            {temp_currfilt(2),temp_currfilt(3),i_TD}), ...
            iqr(Gavg_tempGC_peranatreg.source2target{i_effect}...
            {temp_currfilt(2),temp_currfilt(3),i_TD}), ...
            'lineprops',{'b-d','markerfacecolor','b','markeredgecolor','k'},...
            'transparent',1);  
        sb.mainLine.LineWidth = 2;
        sb.mainLine.MarkerSize = 10;
        hold on;
        sb = shadedErrorBar((1:length(param.GC.tone_aggregation))+0.05, ...
            nanmedian(Gavg_tempGC_peranatreg.source2target{i_effect}...
            {temp_currfilt(3),temp_currfilt(2),i_TD}), ...
            iqr(Gavg_tempGC_peranatreg.source2target{i_effect}...
            {temp_currfilt(3),temp_currfilt(2),i_TD}), ...
            'lineprops',{'r-d','markerfacecolor','r','markeredgecolor','k'},...
            'transparent',1);
        sb.mainLine.LineWidth = 2;
        sb.mainLine.MarkerSize = 10;

        f_sub6.XLim  = [1-0.3 length(param.GC.tone_aggregation)+0.3];
        if istrue(Yaxis_scaling)
            f_sub6.YLim  = [Ylim_temp(1) Ylim_temp(2)];
        end
        f_sub6.XTick =  [1:length(param.GC.tone_aggregation)];
        f_sub6.XTickLabel = param.GC.tone_aggregation;
        a = get(gca, 'XTickLabel');
        set(gca,'XTickLabel', a, 'fontsize', 8);
        f_sub6.XLabel.String = {'Tones'};
        f_sub6.XLabel.FontSize = 12;
        f_sub6.YLabel.String = {'GC estimate'};
        f_sub6.YLabel.FontSize = 12;
        legend([anatreg{i_effect}.label_aggregated{temp_currfilt(2)} '->' ...
            anatreg{i_effect}.label_aggregated{temp_currfilt(3)} ...
            ' (' num2str(NumGC_peranatreg{i_effect}...
            (temp_currfilt(2),temp_currfilt(3))) ' elec pairs)'], ...
            [anatreg{i_effect}.label_aggregated{temp_currfilt(3)} '->' ...
            anatreg{i_effect}.label_aggregated{temp_currfilt(2)} ...
            ' (' num2str(NumGC_peranatreg{i_effect}...
            (temp_currfilt(3),temp_currfilt(2))) ' elec pairs)'], ...
            'location','best')
        set(gca,'TickLabelInterpreter', 'none');

        title(['PE -> PE | ' ...
            anatreg{i_effect}.label_aggregated{temp_currfilt(2)} ' - '...
            anatreg{i_effect}.label_aggregated{temp_currfilt(3)}], ...
            'fontsize', 12);      
    
    if istrue(save_poststepFigs)
        
        path_fig = ([paths_NASTD_ECoG.ECoGdata_Connectivity 'GC/Figs/allsub/' ...
            'PredPred_PEPE/' ]);
        if (~exist(path_fig, 'dir')); mkdir(path_fig); end
        
        filename     = ['ShadLine_N' num2str(length(subs)) ...
            '_medianTemppwGC_' anatreg{i_effect}.filter_label '_TD' num2str(i_TD) '_' ...
            'PredPred_PEPE_'  param.GC.epochdur_ms_label '_'...
            param.GC.InputDataType{1} param.GC.tone_aggregation_label '_ensemnorm.png'];
        figfile      = [path_fig  filename];
        saveas(gcf, figfile, 'png'); %save png version
        close;
    end
    
    
%% 4. Plot GC estimate for time and frequency domain between (ie., Pred_PE, PE_Pred) effects
%Plot median and IQR of GC estimates for each anatomical region as a
%shaded line plot. Different anatomical pairs are plotted in subplots.
%Plotting is separetly done for within (ie., Pred_pred/PE_PE) and between
%(Pred_PE, PE_Pred) effects.

    %Summary GC and number of pairings across anat reg per tone group
    f2 = figure('visible',set_visibility);
    set(f2,'units','normalized','outerposition',[0 0 1 1]) %full screen
    DimSubplot = [length(AnatReg_CatLabels) 2];
    sgtitle({['Time-domain pooled (n = ' num2str(length(subs)) ...
        ') pw GC estimates (median +- IQR) per tone group per anat region'], ...
        [ToneDur_text{i_TD} 's TD; ' ...
        param.GC.InputDataType{1} ', ' param.GC.epochdur_ms_label]}, 'Interpreter', 'none')
    subplot_num = 0;
    
    %4.1.1 Subplot 1/1 Pred-PE & Reg1 - Reg2
        i_effect = 3;
        
        subplot_num = 1;
        temp_currfilt = find(anatreg{i_effect}.filter == 1);
        anatreg{i_effect}.label_aggregated(anatreg{i_effect}.filter)
               
        f_sub1 = subplot(DimSubplot(1),DimSubplot(2),subplot_num);
        %Lineplot with shading (Print double to have it in front and in legend)
        hold on
        sb = shadedErrorBar((1:length(param.GC.tone_aggregation))-0.05, ...
            nanmedian(Gavg_tempGC_peranatreg.source2target{i_effect}...
            {temp_currfilt(1),temp_currfilt(2),i_TD}), ...
            iqr(Gavg_tempGC_peranatreg.source2target{i_effect}...
            {temp_currfilt(1),temp_currfilt(2),i_TD}), ...
            'lineprops',{'b-d','markerfacecolor','b','markeredgecolor','k'},...
            'transparent',1);  
        sb.mainLine.LineWidth = 2;
        sb.mainLine.MarkerSize = 10;
        hold on;
        sb = shadedErrorBar((1:length(param.GC.tone_aggregation))+0.05, ...
            nanmedian(Gavg_tempGC_peranatreg.source2target{i_effect}...
            {temp_currfilt(2),temp_currfilt(1),i_TD}), ...
            iqr(Gavg_tempGC_peranatreg.source2target{i_effect}...
            {temp_currfilt(2),temp_currfilt(1),i_TD}), ...
            'lineprops',{'r-d','markerfacecolor','r','markeredgecolor','k'},...
            'transparent',1);
        sb.mainLine.LineWidth = 2;
        sb.mainLine.MarkerSize = 10;
        Ylim_temp = f_sub1.YLim;

        %Single-elec markers, color-coded by subject
        num_elec = length(Gavg_tempGC_peranatreg.source2target{i_effect}...
            {temp_currfilt(1),temp_currfilt(2),i_TD});
        c1 = cool(length(subs));
        c2 = hot(length(subs));
        for i_elec = 1:num_elec
            curr_sub = Gavg_tempGC_peranatreg.subject_index{i_effect}...
                {temp_currfilt(1),temp_currfilt(2),i_TD}(i_elec);
            hold on;
            %Markers for Reg1 -> Reg2 (cool)
            sc = scatter((1:length(param.GC.tone_aggregation))-...
                (0.02*curr_sub)-0.05, ...
                Gavg_tempGC_peranatreg.source2target{i_effect}...
                {temp_currfilt(1),temp_currfilt(2),i_TD}(i_elec,:),20,'o');
            sc.MarkerFaceColor = c1(curr_sub,:);
            sc.MarkerEdgeColor = 'k';
            sc.MarkerFaceAlpha = 0.5;
        end
        num_elec = length(Gavg_tempGC_peranatreg.source2target{i_effect}...
            {temp_currfilt(2),temp_currfilt(1),i_TD});
        for i_elec = 1:num_elec        
            curr_sub = Gavg_tempGC_peranatreg.subject_index{i_effect}...
                {temp_currfilt(2),temp_currfilt(1),i_TD}(i_elec);
            hold on;
            %Markers for Reg1 <- Reg2 (warm)        
            sc = scatter((1:length(param.GC.tone_aggregation))+...
                (0.02*curr_sub)+0.05, ...
                Gavg_tempGC_peranatreg.source2target{i_effect}...
                {temp_currfilt(2),temp_currfilt(1),i_TD}(i_elec,:),20,'o');
            sc.MarkerFaceColor = c2(curr_sub,:);
            sc.MarkerEdgeColor = 'k';
            sc.MarkerFaceAlpha = 0.5;        
        end

        %Lineplot with shading
        hold on
        sb = shadedErrorBar((1:length(param.GC.tone_aggregation))-0.05, ...
            nanmedian(Gavg_tempGC_peranatreg.source2target{i_effect}...
            {temp_currfilt(1),temp_currfilt(2),i_TD}), ...
            iqr(Gavg_tempGC_peranatreg.source2target{i_effect}...
            {temp_currfilt(1),temp_currfilt(2),i_TD}), ...
            'lineprops',{'b-d','markerfacecolor','b','markeredgecolor','k'},...
            'transparent',1);  
        sb.mainLine.LineWidth = 2;
        sb.mainLine.MarkerSize = 10;
        hold on;
        sb = shadedErrorBar((1:length(param.GC.tone_aggregation))+0.05, ...
            nanmedian(Gavg_tempGC_peranatreg.source2target{i_effect}...
            {temp_currfilt(2),temp_currfilt(1),i_TD}), ...
            iqr(Gavg_tempGC_peranatreg.source2target{i_effect}...
            {temp_currfilt(2),temp_currfilt(1),i_TD}), ...
            'lineprops',{'r-d','markerfacecolor','r','markeredgecolor','k'},...
            'transparent',1);
        sb.mainLine.LineWidth = 2;
        sb.mainLine.MarkerSize = 10;

        f_sub1.XLim  = [1-0.3 length(param.GC.tone_aggregation)+0.3];
        if istrue(Yaxis_scaling)
            f_sub1.YLim  = [Ylim_temp(1) Ylim_temp(2)];
        end
        f_sub1.XTick =  [1:length(param.GC.tone_aggregation)];
        f_sub1.XTickLabel = param.GC.tone_aggregation;
        a = get(gca, 'XTickLabel');
        set(gca,'XTickLabel', a, 'fontsize', 8);
        f_sub1.XLabel.String = {'Tones'};
        f_sub1.XLabel.FontSize = 12;
        f_sub1.YLabel.String = {'GC estimate'};
        f_sub1.YLabel.FontSize = 12;
        legend([anatreg{i_effect}.label_aggregated{temp_currfilt(1)} '->' ...
            anatreg{i_effect}.label_aggregated{temp_currfilt(2)} ...
            ' (' num2str(NumGC_peranatreg{i_effect}...
            (temp_currfilt(1),temp_currfilt(2))) ' elec pairs)'], ...
            [anatreg{i_effect}.label_aggregated{temp_currfilt(2)} '->' ...
            anatreg{i_effect}.label_aggregated{temp_currfilt(1)} ...
            ' (' num2str(NumGC_peranatreg{i_effect}...
            (temp_currfilt(2),temp_currfilt(1))) ' elec pairs)'], ...
            'location','best')
        set(gca,'TickLabelInterpreter', 'none');

        title(['Pred -> PE | ' ...
            anatreg{i_effect}.label_aggregated{temp_currfilt(1)} ' - '...
            anatreg{i_effect}.label_aggregated{temp_currfilt(2)}], ...
            'fontsize', 12);
        
    %4.1.2 Subplot 1/1 Pred-PE & Reg1 - Reg3
        subplot_num = 3;
        f_sub2 = subplot(DimSubplot(1),DimSubplot(2),subplot_num);
        %Lineplot with shading (Print double to have it in front and in legend)
        hold on
        sb = shadedErrorBar((1:length(param.GC.tone_aggregation))-0.05, ...
            nanmedian(Gavg_tempGC_peranatreg.source2target{i_effect}...
            {temp_currfilt(1),temp_currfilt(3),i_TD}), ...
            iqr(Gavg_tempGC_peranatreg.source2target{i_effect}...
            {temp_currfilt(1),temp_currfilt(3),i_TD}), ...
            'lineprops',{'b-d','markerfacecolor','b','markeredgecolor','k'},...
            'transparent',1);  
        sb.mainLine.LineWidth = 2;
        sb.mainLine.MarkerSize = 10;
        hold on;
        sb = shadedErrorBar((1:length(param.GC.tone_aggregation))+0.05, ...
            nanmedian(Gavg_tempGC_peranatreg.source2target{i_effect}...
            {temp_currfilt(3),temp_currfilt(1),i_TD}), ...
            iqr(Gavg_tempGC_peranatreg.source2target{i_effect}...
            {temp_currfilt(3),temp_currfilt(1),i_TD}), ...
            'lineprops',{'r-d','markerfacecolor','r','markeredgecolor','k'},...
            'transparent',1);
        sb.mainLine.LineWidth = 2;
        sb.mainLine.MarkerSize = 10;
        Ylim_temp = f_sub2.YLim;

        %Single-elec markers, color-coded by subject
        num_elec = length(Gavg_tempGC_peranatreg.source2target{i_effect}...
            {temp_currfilt(1),temp_currfilt(3),i_TD});
        c1 = cool(length(subs));
        c2 = hot(length(subs));
        for i_elec = 1:num_elec
            curr_sub = Gavg_tempGC_peranatreg.subject_index{i_effect}...
                {temp_currfilt(1),temp_currfilt(3),i_TD}(i_elec);
            hold on;
            %Markers for Reg1 -> Reg2 (cool)
            sc = scatter((1:length(param.GC.tone_aggregation))-...
                (0.02*curr_sub)-0.05, ...
                Gavg_tempGC_peranatreg.source2target{i_effect}...
                {temp_currfilt(1),temp_currfilt(3),i_TD}(i_elec,:),20,'o');
            sc.MarkerFaceColor = c1(curr_sub,:);
            sc.MarkerEdgeColor = 'k';
            sc.MarkerFaceAlpha = 0.5;
        end
        num_elec = length(Gavg_tempGC_peranatreg.source2target{i_effect}...
            {temp_currfilt(3),temp_currfilt(1),i_TD});
        for i_elec = 1:num_elec        
            curr_sub = Gavg_tempGC_peranatreg.subject_index{i_effect}...
                {temp_currfilt(3),temp_currfilt(1),i_TD}(i_elec);
            hold on;
            %Markers for Reg1 <- Reg2 (warm)        
            sc = scatter((1:length(param.GC.tone_aggregation))+...
                (0.02*curr_sub)+0.05, ...
                Gavg_tempGC_peranatreg.source2target{i_effect}...
                {temp_currfilt(3),temp_currfilt(1),i_TD}(i_elec,:),20,'o');
            sc.MarkerFaceColor = c2(curr_sub,:);
            sc.MarkerEdgeColor = 'k';
            sc.MarkerFaceAlpha = 0.5;        
        end

        %Lineplot with shading
        hold on
        sb = shadedErrorBar((1:length(param.GC.tone_aggregation))-0.05, ...
            nanmedian(Gavg_tempGC_peranatreg.source2target{i_effect}...
            {temp_currfilt(1),temp_currfilt(3),i_TD}), ...
            iqr(Gavg_tempGC_peranatreg.source2target{i_effect}...
            {temp_currfilt(1),temp_currfilt(3),i_TD}), ...
            'lineprops',{'b-d','markerfacecolor','b','markeredgecolor','k'},...
            'transparent',1);  
        sb.mainLine.LineWidth = 2;
        sb.mainLine.MarkerSize = 10;
        hold on;
        sb = shadedErrorBar((1:length(param.GC.tone_aggregation))+0.05, ...
            nanmedian(Gavg_tempGC_peranatreg.source2target{i_effect}...
            {temp_currfilt(3),temp_currfilt(1),i_TD}), ...
            iqr(Gavg_tempGC_peranatreg.source2target{i_effect}...
            {temp_currfilt(3),temp_currfilt(1),i_TD}), ...
            'lineprops',{'r-d','markerfacecolor','r','markeredgecolor','k'},...
            'transparent',1);
        sb.mainLine.LineWidth = 2;
        sb.mainLine.MarkerSize = 10;

        f_sub2.XLim  = [1-0.3 length(param.GC.tone_aggregation)+0.3];
        if istrue(Yaxis_scaling)
            f_sub2.YLim  = [Ylim_temp(1) Ylim_temp(2)];
        end
        f_sub2.XTick =  [1:length(param.GC.tone_aggregation)];
        f_sub2.XTickLabel = param.GC.tone_aggregation;
        a = get(gca, 'XTickLabel');
        set(gca,'XTickLabel', a, 'fontsize', 8);
        f_sub2.XLabel.String = {'Tones'};
        f_sub2.XLabel.FontSize = 12;
        f_sub2.YLabel.String = {'GC estimate'};
        f_sub2.YLabel.FontSize = 12;
        legend([anatreg{i_effect}.label_aggregated{temp_currfilt(1)} '->' ...
            anatreg{i_effect}.label_aggregated{temp_currfilt(3)} ...
            ' (' num2str(NumGC_peranatreg{i_effect}...
            (temp_currfilt(1),temp_currfilt(3))) ' elec pairs)'], ...
            [anatreg{i_effect}.label_aggregated{temp_currfilt(3)} '->' ...
            anatreg{i_effect}.label_aggregated{temp_currfilt(1)} ...
            ' (' num2str(NumGC_peranatreg{i_effect}...
            (temp_currfilt(3),temp_currfilt(1))) ' elec pairs)'], ...
            'location','best')
        set(gca,'TickLabelInterpreter', 'none');

        title(['Pred -> PE | ' ...
            anatreg{i_effect}.label_aggregated{temp_currfilt(1)} ' - '...
            anatreg{i_effect}.label_aggregated{temp_currfilt(3)}], ...
            'fontsize', 12);

    %4.1.3 Subplot 1/1 Pred-PE & Reg2 - Reg3
        subplot_num = 5;

        f_sub3 = subplot(DimSubplot(1),DimSubplot(2),subplot_num);
        %Lineplot with shading (Print double to have it in front and in legend)
        hold on
        sb = shadedErrorBar((1:length(param.GC.tone_aggregation))-0.05, ...
            nanmedian(Gavg_tempGC_peranatreg.source2target{i_effect}...
            {temp_currfilt(2),temp_currfilt(3),i_TD}), ...
            iqr(Gavg_tempGC_peranatreg.source2target{i_effect}...
            {temp_currfilt(2),temp_currfilt(3),i_TD}), ...
            'lineprops',{'b-d','markerfacecolor','b','markeredgecolor','k'},...
            'transparent',1);  
        sb.mainLine.LineWidth = 2;
        sb.mainLine.MarkerSize = 10;
        hold on;
        sb = shadedErrorBar((1:length(param.GC.tone_aggregation))+0.05, ...
            nanmedian(Gavg_tempGC_peranatreg.source2target{i_effect}...
            {temp_currfilt(3),temp_currfilt(2),i_TD}), ...
            iqr(Gavg_tempGC_peranatreg.source2target{i_effect}...
            {temp_currfilt(3),temp_currfilt(2),i_TD}), ...
            'lineprops',{'r-d','markerfacecolor','r','markeredgecolor','k'},...
            'transparent',1);
        sb.mainLine.LineWidth = 2;
        sb.mainLine.MarkerSize = 10;
        Ylim_temp = f_sub3.YLim;

        %Single-elec markers, color-coded by subject
        num_elec = length(Gavg_tempGC_peranatreg.source2target{i_effect}...
            {temp_currfilt(2),temp_currfilt(3),i_TD});
        c1 = cool(length(subs));
        c2 = hot(length(subs));
        for i_elec = 1:num_elec
            curr_sub = Gavg_tempGC_peranatreg.subject_index{i_effect}...
                {temp_currfilt(2),temp_currfilt(3),i_TD}(i_elec);
            hold on;
            %Markers for Reg1 -> Reg2 (cool)
            sc = scatter((1:length(param.GC.tone_aggregation))-...
                (0.02*curr_sub)-0.05, ...
                Gavg_tempGC_peranatreg.source2target{i_effect}...
                {temp_currfilt(2),temp_currfilt(3),i_TD}(i_elec,:),20,'o');
            sc.MarkerFaceColor = c1(curr_sub,:);
            sc.MarkerEdgeColor = 'k';
            sc.MarkerFaceAlpha = 0.5;
        end
        num_elec = length(Gavg_tempGC_peranatreg.source2target{i_effect}...
            {temp_currfilt(3),temp_currfilt(2),i_TD});
        for i_elec = 1:num_elec        
            curr_sub = Gavg_tempGC_peranatreg.subject_index{i_effect}...
                {temp_currfilt(3),temp_currfilt(2),i_TD}(i_elec);
            hold on;
            %Markers for Reg1 <- Reg2 (warm)        
            sc = scatter((1:length(param.GC.tone_aggregation))+...
                (0.02*curr_sub)+0.05, ...
                Gavg_tempGC_peranatreg.source2target{i_effect}...
                {temp_currfilt(3),temp_currfilt(2),i_TD}(i_elec,:),20,'o');
            sc.MarkerFaceColor = c2(curr_sub,:);
            sc.MarkerEdgeColor = 'k';
            sc.MarkerFaceAlpha = 0.5;        
        end
        
        %Lineplot with shading
        hold on
        sb = shadedErrorBar((1:length(param.GC.tone_aggregation))-0.05, ...
            nanmedian(Gavg_tempGC_peranatreg.source2target{i_effect}...
            {temp_currfilt(2),temp_currfilt(3),i_TD}), ...
            iqr(Gavg_tempGC_peranatreg.source2target{i_effect}...
            {temp_currfilt(2),temp_currfilt(3),i_TD}), ...
            'lineprops',{'b-d','markerfacecolor','b','markeredgecolor','k'},...
            'transparent',1);  
        sb.mainLine.LineWidth = 2;
        sb.mainLine.MarkerSize = 10;
        hold on;
        sb = shadedErrorBar((1:length(param.GC.tone_aggregation))+0.05, ...
            nanmedian(Gavg_tempGC_peranatreg.source2target{i_effect}...
            {temp_currfilt(3),temp_currfilt(2),i_TD}), ...
            iqr(Gavg_tempGC_peranatreg.source2target{i_effect}...
            {temp_currfilt(3),temp_currfilt(2),i_TD}), ...
            'lineprops',{'r-d','markerfacecolor','r','markeredgecolor','k'},...
            'transparent',1);
        sb.mainLine.LineWidth = 2;
        sb.mainLine.MarkerSize = 10;

        f_sub3.XLim  = [1-0.3 length(param.GC.tone_aggregation)+0.3];
        if istrue(Yaxis_scaling)
            f_sub3.YLim  = [Ylim_temp(1) Ylim_temp(2)];
        end
        f_sub3.XTick =  [1:length(param.GC.tone_aggregation)];
        f_sub3.XTickLabel = param.GC.tone_aggregation;
        a = get(gca, 'XTickLabel');
        set(gca,'XTickLabel', a, 'fontsize', 8);
        f_sub3.XLabel.String = {'Tones'};
        f_sub3.XLabel.FontSize = 12;
        f_sub3.YLabel.String = {'GC estimate'};
        f_sub3.YLabel.FontSize = 12;
        legend([anatreg{i_effect}.label_aggregated{temp_currfilt(2)} '->' ...
            anatreg{i_effect}.label_aggregated{temp_currfilt(3)} ...
            ' (' num2str(NumGC_peranatreg{i_effect}...
            (temp_currfilt(2),temp_currfilt(3))) ' elec pairs)'], ...
            [anatreg{i_effect}.label_aggregated{temp_currfilt(3)} '->' ...
            anatreg{i_effect}.label_aggregated{temp_currfilt(2)} ...
            ' (' num2str(NumGC_peranatreg{i_effect}...
            (temp_currfilt(3),temp_currfilt(2))) ' elec pairs)'], ...
            'location','best')
        set(gca,'TickLabelInterpreter', 'none');

        title(['Pred -> PE | ' ...
            anatreg{i_effect}.label_aggregated{temp_currfilt(2)} ' - '...
            anatreg{i_effect}.label_aggregated{temp_currfilt(3)}], ...
            'fontsize', 12);    
    
     %4.2.1 Subplot 1/1 PE-Pred & Reg1 - Reg2
        i_effect = 4;
        
        subplot_num = 2;              
        f_sub4 = subplot(DimSubplot(1),DimSubplot(2),subplot_num);
        %Lineplot with shading (Print double to have it in front and in legend)
        hold on
        sb = shadedErrorBar((1:length(param.GC.tone_aggregation))-0.05, ...
            nanmedian(Gavg_tempGC_peranatreg.source2target{i_effect}...
            {temp_currfilt(1),temp_currfilt(2),i_TD}), ...
            iqr(Gavg_tempGC_peranatreg.source2target{i_effect}...
            {temp_currfilt(1),temp_currfilt(2),i_TD}), ...
            'lineprops',{'b-d','markerfacecolor','b','markeredgecolor','k'},...
            'transparent',1);  
        sb.mainLine.LineWidth = 2;
        sb.mainLine.MarkerSize = 10;
        hold on;
        sb = shadedErrorBar((1:length(param.GC.tone_aggregation))+0.05, ...
            nanmedian(Gavg_tempGC_peranatreg.source2target{i_effect}...
            {temp_currfilt(2),temp_currfilt(1),i_TD}), ...
            iqr(Gavg_tempGC_peranatreg.source2target{i_effect}...
            {temp_currfilt(2),temp_currfilt(1),i_TD}), ...
            'lineprops',{'r-d','markerfacecolor','r','markeredgecolor','k'},...
            'transparent',1);
        sb.mainLine.LineWidth = 2;
        sb.mainLine.MarkerSize = 10;
        Ylim_temp = f_sub4.YLim;

        %Single-elec markers, color-coded by subject
        num_elec = length(Gavg_tempGC_peranatreg.source2target{i_effect}...
            {temp_currfilt(1),temp_currfilt(2),i_TD});
        c1 = cool(length(subs));
        c2 = hot(length(subs));
        for i_elec = 1:num_elec
            curr_sub = Gavg_tempGC_peranatreg.subject_index{i_effect}...
                {temp_currfilt(1),temp_currfilt(2),i_TD}(i_elec);
            hold on;
            %Markers for Reg1 -> Reg2 (cool)
            sc = scatter((1:length(param.GC.tone_aggregation))-...
                (0.02*curr_sub)-0.05, ...
                Gavg_tempGC_peranatreg.source2target{i_effect}...
                {temp_currfilt(1),temp_currfilt(2),i_TD}(i_elec,:),20,'o');
            sc.MarkerFaceColor = c1(curr_sub,:);
            sc.MarkerEdgeColor = 'k';
            sc.MarkerFaceAlpha = 0.5;
        end
        num_elec = length(Gavg_tempGC_peranatreg.source2target{i_effect}...
            {temp_currfilt(2),temp_currfilt(1),i_TD});
        for i_elec = 1:num_elec        
            curr_sub = Gavg_tempGC_peranatreg.subject_index{i_effect}...
                {temp_currfilt(2),temp_currfilt(1),i_TD}(i_elec);
            hold on;
            %Markers for Reg1 <- Reg2 (warm)        
            sc = scatter((1:length(param.GC.tone_aggregation))+...
                (0.02*curr_sub)+0.05, ...
                Gavg_tempGC_peranatreg.source2target{i_effect}...
                {temp_currfilt(2),temp_currfilt(1),i_TD}(i_elec,:),20,'o');
            sc.MarkerFaceColor = c2(curr_sub,:);
            sc.MarkerEdgeColor = 'k';
            sc.MarkerFaceAlpha = 0.5;        
        end

        %Lineplot with shading
        hold on
        sb = shadedErrorBar((1:length(param.GC.tone_aggregation))-0.05, ...
            nanmedian(Gavg_tempGC_peranatreg.source2target{i_effect}...
            {temp_currfilt(1),temp_currfilt(2),i_TD}), ...
            iqr(Gavg_tempGC_peranatreg.source2target{i_effect}...
            {temp_currfilt(1),temp_currfilt(2),i_TD}), ...
            'lineprops',{'b-d','markerfacecolor','b','markeredgecolor','k'},...
            'transparent',1);  
        sb.mainLine.LineWidth = 2;
        sb.mainLine.MarkerSize = 10;
        hold on;
        sb = shadedErrorBar((1:length(param.GC.tone_aggregation))+0.05, ...
            nanmedian(Gavg_tempGC_peranatreg.source2target{i_effect}...
            {temp_currfilt(2),temp_currfilt(1),i_TD}), ...
            iqr(Gavg_tempGC_peranatreg.source2target{i_effect}...
            {temp_currfilt(2),temp_currfilt(1),i_TD}), ...
            'lineprops',{'r-d','markerfacecolor','r','markeredgecolor','k'},...
            'transparent',1);
        sb.mainLine.LineWidth = 2;
        sb.mainLine.MarkerSize = 10;

        f_sub4.XLim  = [1-0.3 length(param.GC.tone_aggregation)+0.3];
        if istrue(Yaxis_scaling)
            f_sub4.YLim  = [Ylim_temp(1) Ylim_temp(2)];
        end
        f_sub4.XTick =  [1:length(param.GC.tone_aggregation)];
        f_sub4.XTickLabel = param.GC.tone_aggregation;
        a = get(gca, 'XTickLabel');
        set(gca,'XTickLabel', a, 'fontsize', 8);
        f_sub4.XLabel.String = {'Tones'};
        f_sub4.XLabel.FontSize = 12;
        f_sub4.YLabel.String = {'GC estimate'};
        f_sub4.YLabel.FontSize = 12;
        legend([anatreg{i_effect}.label_aggregated{temp_currfilt(1)} '->' ...
            anatreg{i_effect}.label_aggregated{temp_currfilt(2)} ...
            ' (' num2str(NumGC_peranatreg{i_effect}...
            (temp_currfilt(1),temp_currfilt(2))) ' elec pairs)'], ...
            [anatreg{i_effect}.label_aggregated{temp_currfilt(2)} '->' ...
            anatreg{i_effect}.label_aggregated{temp_currfilt(1)} ...
            ' (' num2str(NumGC_peranatreg{i_effect}...
            (temp_currfilt(2),temp_currfilt(1))) ' elec pairs)'], ...
            'location','best')
        set(gca,'TickLabelInterpreter', 'none');

        title(['PE -> Pred | ' ...
            anatreg{i_effect}.label_aggregated{temp_currfilt(1)} ' - '...
            anatreg{i_effect}.label_aggregated{temp_currfilt(2)}], ...
            'fontsize', 12);
        
    %4.2.2 Subplot 1/1 PE-Pred & Reg1 - Reg3
        subplot_num = 4;
        f_sub5 = subplot(DimSubplot(1),DimSubplot(2),subplot_num);
        %Lineplot with shading (Print double to have it in front and in legend)
        hold on
        sb = shadedErrorBar((1:length(param.GC.tone_aggregation))-0.05, ...
            nanmedian(Gavg_tempGC_peranatreg.source2target{i_effect}...
            {temp_currfilt(1),temp_currfilt(3),i_TD}), ...
            iqr(Gavg_tempGC_peranatreg.source2target{i_effect}...
            {temp_currfilt(1),temp_currfilt(3),i_TD}), ...
            'lineprops',{'b-d','markerfacecolor','b','markeredgecolor','k'},...
            'transparent',1);  
        sb.mainLine.LineWidth = 2;
        sb.mainLine.MarkerSize = 10;
        hold on;
        sb = shadedErrorBar((1:length(param.GC.tone_aggregation))+0.05, ...
            nanmedian(Gavg_tempGC_peranatreg.source2target{i_effect}...
            {temp_currfilt(3),temp_currfilt(1),i_TD}), ...
            iqr(Gavg_tempGC_peranatreg.source2target{i_effect}...
            {temp_currfilt(3),temp_currfilt(1),i_TD}), ...
            'lineprops',{'r-d','markerfacecolor','r','markeredgecolor','k'},...
            'transparent',1);
        sb.mainLine.LineWidth = 2;
        sb.mainLine.MarkerSize = 10;
        Ylim_temp = f_sub5.YLim;

        %Single-elec markers, color-coded by subject
        num_elec = length(Gavg_tempGC_peranatreg.source2target{i_effect}...
            {temp_currfilt(1),temp_currfilt(3),i_TD});
        c1 = cool(length(subs));
        c2 = hot(length(subs));
        for i_elec = 1:num_elec
            curr_sub = Gavg_tempGC_peranatreg.subject_index{i_effect}...
                {temp_currfilt(1),temp_currfilt(3),i_TD}(i_elec);
            hold on;
            %Markers for Reg1 -> Reg2 (cool)
            sc = scatter((1:length(param.GC.tone_aggregation))-...
                (0.02*curr_sub)-0.05, ...
                Gavg_tempGC_peranatreg.source2target{i_effect}...
                {temp_currfilt(1),temp_currfilt(3),i_TD}(i_elec,:),20,'o');
            sc.MarkerFaceColor = c1(curr_sub,:);
            sc.MarkerEdgeColor = 'k';
            sc.MarkerFaceAlpha = 0.5;
        end
        num_elec = length(Gavg_tempGC_peranatreg.source2target{i_effect}...
            {temp_currfilt(3),temp_currfilt(1),i_TD});
        for i_elec = 1:num_elec        
            curr_sub = Gavg_tempGC_peranatreg.subject_index{i_effect}...
                {temp_currfilt(3),temp_currfilt(1),i_TD}(i_elec);
            hold on;
            %Markers for Reg1 <- Reg2 (warm)        
            sc = scatter((1:length(param.GC.tone_aggregation))+...
                (0.02*curr_sub)+0.05, ...
                Gavg_tempGC_peranatreg.source2target{i_effect}...
                {temp_currfilt(3),temp_currfilt(1),i_TD}(i_elec,:),20,'o');
            sc.MarkerFaceColor = c2(curr_sub,:);
            sc.MarkerEdgeColor = 'k';
            sc.MarkerFaceAlpha = 0.5;        
        end

        %Lineplot with shading
        hold on
        sb = shadedErrorBar((1:length(param.GC.tone_aggregation))-0.05, ...
            nanmedian(Gavg_tempGC_peranatreg.source2target{i_effect}...
            {temp_currfilt(1),temp_currfilt(3),i_TD}), ...
            iqr(Gavg_tempGC_peranatreg.source2target{i_effect}...
            {temp_currfilt(1),temp_currfilt(3),i_TD}), ...
            'lineprops',{'b-d','markerfacecolor','b','markeredgecolor','k'},...
            'transparent',1);  
        sb.mainLine.LineWidth = 2;
        sb.mainLine.MarkerSize = 10;
        hold on;
        sb = shadedErrorBar((1:length(param.GC.tone_aggregation))+0.05, ...
            nanmedian(Gavg_tempGC_peranatreg.source2target{i_effect}...
            {temp_currfilt(3),temp_currfilt(1),i_TD}), ...
            iqr(Gavg_tempGC_peranatreg.source2target{i_effect}...
            {temp_currfilt(3),temp_currfilt(1),i_TD}), ...
            'lineprops',{'r-d','markerfacecolor','r','markeredgecolor','k'},...
            'transparent',1);
        sb.mainLine.LineWidth = 2;
        sb.mainLine.MarkerSize = 10;

        f_sub5.XLim  = [1-0.3 length(param.GC.tone_aggregation)+0.3];
        if istrue(Yaxis_scaling)
            f_sub5.YLim  = [Ylim_temp(1) Ylim_temp(2)];
        end
        f_sub5.XTick =  [1:length(param.GC.tone_aggregation)];
        f_sub5.XTickLabel = param.GC.tone_aggregation;
        a = get(gca, 'XTickLabel');
        set(gca,'XTickLabel', a, 'fontsize', 8);
        f_sub5.XLabel.String = {'Tones'};
        f_sub5.XLabel.FontSize = 12;
        f_sub5.YLabel.String = {'GC estimate'};
        f_sub5.YLabel.FontSize = 12;
        legend([anatreg{i_effect}.label_aggregated{temp_currfilt(1)} '->' ...
            anatreg{i_effect}.label_aggregated{temp_currfilt(3)} ...
            ' (' num2str(NumGC_peranatreg{i_effect}...
            (temp_currfilt(1),temp_currfilt(3))) ' elec pairs)'], ...
            [anatreg{i_effect}.label_aggregated{temp_currfilt(3)} '->' ...
            anatreg{i_effect}.label_aggregated{temp_currfilt(1)} ...
            ' (' num2str(NumGC_peranatreg{i_effect}...
            (temp_currfilt(3),temp_currfilt(1))) ' elec pairs)'], ...
            'location','best')
        set(gca,'TickLabelInterpreter', 'none');

        title(['PE -> Pred | ' ...
            anatreg{i_effect}.label_aggregated{temp_currfilt(1)} ' - '...
            anatreg{i_effect}.label_aggregated{temp_currfilt(3)}], ...
            'fontsize', 12);

    %4.2.3 Subplot 1/1 PE-Pred & Reg2 - Reg3
        subplot_num = 6;
        f_sub6 = subplot(DimSubplot(1),DimSubplot(2),subplot_num);
        %Lineplot with shading (Print double to have it in front and in legend)
        hold on
        sb = shadedErrorBar((1:length(param.GC.tone_aggregation))-0.05, ...
            nanmedian(Gavg_tempGC_peranatreg.source2target{i_effect}...
            {temp_currfilt(2),temp_currfilt(3),i_TD}), ...
            iqr(Gavg_tempGC_peranatreg.source2target{i_effect}...
            {temp_currfilt(2),temp_currfilt(3),i_TD}), ...
            'lineprops',{'b-d','markerfacecolor','b','markeredgecolor','k'},...
            'transparent',1);  
        sb.mainLine.LineWidth = 2;
        sb.mainLine.MarkerSize = 10;
        hold on;
        sb = shadedErrorBar((1:length(param.GC.tone_aggregation))+0.05, ...
            nanmedian(Gavg_tempGC_peranatreg.source2target{i_effect}...
            {temp_currfilt(3),temp_currfilt(2),i_TD}), ...
            iqr(Gavg_tempGC_peranatreg.source2target{i_effect}...
            {temp_currfilt(3),temp_currfilt(2),i_TD}), ...
            'lineprops',{'r-d','markerfacecolor','r','markeredgecolor','k'},...
            'transparent',1);
        sb.mainLine.LineWidth = 2;
        sb.mainLine.MarkerSize = 10;
        Ylim_temp = f_sub6.YLim;

        %Single-elec markers, color-coded by subject
        num_elec = length(Gavg_tempGC_peranatreg.source2target{i_effect}...
            {temp_currfilt(2),temp_currfilt(3),i_TD});
        c1 = cool(length(subs));
        c2 = hot(length(subs));
        for i_elec = 1:num_elec
            curr_sub = Gavg_tempGC_peranatreg.subject_index{i_effect}...
                {temp_currfilt(2),temp_currfilt(3),i_TD}(i_elec);
            hold on;
            %Markers for Reg1 -> Reg2 (cool)
            sc = scatter((1:length(param.GC.tone_aggregation))-...
                (0.02*curr_sub)-0.05, ...
                Gavg_tempGC_peranatreg.source2target{i_effect}...
                {temp_currfilt(2),temp_currfilt(3),i_TD}(i_elec,:),20,'o');
            sc.MarkerFaceColor = c1(curr_sub,:);
            sc.MarkerEdgeColor = 'k';
            sc.MarkerFaceAlpha = 0.5;
        end
        num_elec = length(Gavg_tempGC_peranatreg.source2target{i_effect}...
            {temp_currfilt(3),temp_currfilt(2),i_TD});
        for i_elec = 1:num_elec        
            curr_sub = Gavg_tempGC_peranatreg.subject_index{i_effect}...
                {temp_currfilt(3),temp_currfilt(2),i_TD}(i_elec);
            hold on;
            %Markers for Reg1 <- Reg2 (warm)        
            sc = scatter((1:length(param.GC.tone_aggregation))+...
                (0.02*curr_sub)+0.05, ...
                Gavg_tempGC_peranatreg.source2target{i_effect}...
                {temp_currfilt(3),temp_currfilt(2),i_TD}(i_elec,:),20,'o');
            sc.MarkerFaceColor = c2(curr_sub,:);
            sc.MarkerEdgeColor = 'k';
            sc.MarkerFaceAlpha = 0.5;        
        end
        
        %Lineplot with shading
        hold on
        sb = shadedErrorBar((1:length(param.GC.tone_aggregation))-0.05, ...
            nanmedian(Gavg_tempGC_peranatreg.source2target{i_effect}...
            {temp_currfilt(2),temp_currfilt(3),i_TD}), ...
            iqr(Gavg_tempGC_peranatreg.source2target{i_effect}...
            {temp_currfilt(2),temp_currfilt(3),i_TD}), ...
            'lineprops',{'b-d','markerfacecolor','b','markeredgecolor','k'},...
            'transparent',1);  
        sb.mainLine.LineWidth = 2;
        sb.mainLine.MarkerSize = 10;
        hold on;
        sb = shadedErrorBar((1:length(param.GC.tone_aggregation))+0.05, ...
            nanmedian(Gavg_tempGC_peranatreg.source2target{i_effect}...
            {temp_currfilt(3),temp_currfilt(2),i_TD}), ...
            iqr(Gavg_tempGC_peranatreg.source2target{i_effect}...
            {temp_currfilt(3),temp_currfilt(2),i_TD}), ...
            'lineprops',{'r-d','markerfacecolor','r','markeredgecolor','k'},...
            'transparent',1);
        sb.mainLine.LineWidth = 2;
        sb.mainLine.MarkerSize = 10;

        f_sub6.XLim  = [1-0.3 length(param.GC.tone_aggregation)+0.3];
        if istrue(Yaxis_scaling)
            f_sub6.YLim  = [Ylim_temp(1) Ylim_temp(2)];
        end
        f_sub6.XTick =  [1:length(param.GC.tone_aggregation)];
        f_sub6.XTickLabel = param.GC.tone_aggregation;
        a = get(gca, 'XTickLabel');
        set(gca,'XTickLabel', a, 'fontsize', 8);
        f_sub6.XLabel.String = {'Tones'};
        f_sub6.XLabel.FontSize = 12;
        f_sub6.YLabel.String = {'GC estimate'};
        f_sub6.YLabel.FontSize = 12;
        legend([anatreg{i_effect}.label_aggregated{temp_currfilt(2)} '->' ...
            anatreg{i_effect}.label_aggregated{temp_currfilt(3)} ...
            ' (' num2str(NumGC_peranatreg{i_effect}...
            (temp_currfilt(2),temp_currfilt(3))) ' elec pairs)'], ...
            [anatreg{i_effect}.label_aggregated{temp_currfilt(3)} '->' ...
            anatreg{i_effect}.label_aggregated{temp_currfilt(2)} ...
            ' (' num2str(NumGC_peranatreg{i_effect}...
            (temp_currfilt(3),temp_currfilt(2))) ' elec pairs)'], ...
            'location','best')
        set(gca,'TickLabelInterpreter', 'none');

        title(['PE -> Pred | ' ...
            anatreg{i_effect}.label_aggregated{temp_currfilt(2)} ' '...
            anatreg{i_effect}.label_aggregated{temp_currfilt(3)}], ...
            'fontsize', 12);   
        
    
    if istrue(save_poststepFigs)
        path_fig = ([paths_NASTD_ECoG.ECoGdata_Connectivity 'GC/Figs/allsub/' ...
            'PredPE_PEPred/' ]);
        if (~exist(path_fig, 'dir')); mkdir(path_fig); end
        
        filename     = ['ShadLine_N' num2str(length(subs)) ...
            '_medianTemppwGC_' anatreg{i_effect}.filter_label '_TD' num2str(i_TD) '_' ...
            'PredPE_PEPred_'  param.GC.epochdur_ms_label '_'...
            param.GC.InputDataType{1} param.GC.tone_aggregation_label '_ensemnorm.png'];
        figfile      = [path_fig  filename];
        saveas(gcf, figfile, 'png'); %save png version
        close;
    end    
    
end

end